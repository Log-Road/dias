generator client {
  provider      = "prisma-client-js"
  output        = "./client"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_DB")
}

model Contests {
  id         String             @id() @default(uuid())
  name       String
  start_date DateTime           @default(now())
  end_date   DateTime           @default(now())
  status     COMPETITION_STATUS @default(ONGOING)
  place      String
  purpose    String
  audience   String
  Awards     Awards[]
  Projects   Projects[]
  Vote       Vote[]

  Winner Winner[]
}

model Projects {
  id            String         @id() @default(uuid())
  contest_id    String
  contest       Contests       @relation(references: [id], fields: [contest_id])
  name          String
  image         String
  members       String[]
  skills        String[]
  status        PROJECT_STATUS
  auth_category CATEGORY
  introduction  String
  description   String
  video_link    String
  place         String
  Vote          Vote[]
  Like          Like[]
  CreatedAt     DateTime       @default(now())
}

model Awards {
  id         String   @id() @default(uuid())
  contest_id String
  contest    Contests @relation(references: [id], fields: [contest_id])
  name       String
  count      Int

  Winner Winner[]
}

model Vote {
  contest_id String
  project_id String
  user_id    String
  contest    Contests @relation(references: [id], fields: [contest_id])
  project    Projects @relation(references: [id], fields: [project_id])

  @@id([project_id, user_id])
}

model Like {
  project_id String
  user_id    String
  project    Projects @relation(references: [id], fields: [project_id])

  @@id([project_id, user_id])
}

model Club {
  club_id   String  @id @default(uuid())
  club_name String  @unique
  is_active Boolean @default(true)
}

model Winner {
  id         String   @id @default(uuid())
  award_id   String
  contest_id String
  user_id    String
  award      Awards   @relation(references: [id], fields: [award_id])
  contest    Contests @relation(references: [id], fields: [contest_id])

  @@unique([award_id, user_id])
}

enum COMPETITION_STATUS {
  ONGOING
  IN_PROGRESS
  PENDING_AWARD
  CLOSED
}

enum PROJECT_STATUS {
  PENDING
  APPROVAL
  REJECTED
  MODIFICATION
  DELETION
}

enum CATEGORY {
  PERSONAL
  TEAM
  CLUB
}
